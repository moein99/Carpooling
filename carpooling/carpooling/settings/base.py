"""
Django settings for carpooling project.

Generated by 'django-admin startproject' using Django 2.2.2.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os

import django.contrib.staticfiles.finders
# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
from django.urls import reverse_lazy
from elasticsearch import Elasticsearch

BASE_DIR = os.path.dirname(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))
LOGIN_REDIRECT_URL = '/'

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'jrmvrkk4khilp822a$om_%id^ft!59r@dmy#doo8e1)yehbwtq'

# Application definition

INSTALLED_APPS = [
    'background_task',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.gis',
    'root.apps.RootConfig',
    'account.apps.AccountConfig',
    'group.apps.GroupConfig',
    'trip.apps.TripConfig',
    'semanticuiforms',
]

SESSION_ENGINE = 'mongo_sessions.session'
MONGO_HOST = 'mongo'
MONGO_SESSIONS_TTL = 8 * 60 * 60  # Equivalent to 8 hours
SESSION_SAVE_EVERY_REQUEST = True

CELERY_BROKER_URL = 'mongodb://mongo:27017'
CELERY_RESULT_BACKEND = 'mongodb://mongo:27017'
CELERY_ACCEPT_CONTENT = ['application/json']
CELERY_RESULT_SERIALIZER = 'json'
CELERY_TASK_SERIALIZER = 'json'

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'request_logging.middleware.LoggingMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'carpooling.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['root/templates', 'account/templates', 'group/templates', 'trip/templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'carpooling.wsgi.application'

# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.contrib.gis.db.backends.postgis',
        'NAME': 'carpooling_db',
        'PORT': 5432,
        'HOST': 'db',
        'USER': 'carpooling'
    }
}

# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators


AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Tehran'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/static/'

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]

AUTH_USER_MODEL = 'account.Member'

MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'

# Email Settings
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_USE_TLS = True
EMAIL_PORT = 587
EMAIL_HOST_USER = 'carpooling.cafebazaar@gmail.com'
EMAIL_HOST_PASSWORD = os.environ['CARPOOLING_PASS']
LOGIN_URL = reverse_lazy('login')
SPOTIFY_CLIENT_ID = os.environ['CLIENT_ID']
SPOTIFY_CLIENT_SECRET = os.environ['CLIENT_SECRET']
SPOTIFY_REFRESH_TOKEN = os.environ['REFRESH_TOKEN']
SPOTIFY_USERNAME = os.environ['SPOTIFY_USERNAME']

USER_TZ = True

DISTANCE_THRESHOLD = 100

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,


    'formatters': {
        'verbose': {
            'format': '[{asctime}] {process:d} {thread:d} {name} {funcName} {lineno} {levelname} "{message}"',
            'style': '{',
        },
        'simple': {
            'format': '{levelname} {message}',
            'style': '{',
        },
        'django.request': {
            '()': 'django.utils.log.ServerFormatter',
            'format': '[{server_time}] {name} @{user} {levelname} {message}',
            'style': '{',
        }
    },


    'filters': {
        'require_debug_true': {
            '()': 'django.utils.log.RequireDebugTrue',
        },
        'require_debug_false': {
            '()': 'django.utils.log.RequireDebugFalse',
        },
        'request_user_filter': {
            '()': 'carpooling.filters.RequestUserFilter'
        },
    },


    'handlers': {
        'console': {
            'level': 'DEBUG',
            'filters': ['require_debug_true'],
            'class': 'logging.StreamHandler',
            'formatter': 'verbose'
        },

        'django.request': {
            'level': 'INFO',
            'filters': ['request_user_filter', 'require_debug_false'],
            'class': 'logging.StreamHandler',
            'formatter': 'django.request',
        },

        'logfile': {
            'level': 'INFO',
            'formatter': 'django.request',
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': os.path.join(BASE_DIR, 'carpooling.log'),
            'maxBytes': 50 * 2**20,  # 50MB
            'backupCount': 3,
        },

        'mail_admins': {
            'level': 'ERROR',
            'class': 'django.utils.log.AdminEmailHandler',
            'filters': ['require_debug_false'],
            'include_html': True,
        },

        'mongolog': {
            'level': 'INFO',
            'class': 'mongolog.SimpleMongoLogHandler',

            'connection': 'mongodb://mongo:27017',
            'collection': 'carpooling_log'
        },

        'null': {
            'class': 'logging.NullHandler',
        },
    },


    'loggers': {
        'django': {
            'propagate': True,
        },

        'django.request': {
            'handlers': ['django.request', 'logfile'],
            'level': 'INFO',
            'propagate': True,
        },

        'django.server': {
            'handlers': ['null'],
            'propagate': False,
        },

        'django.utils.autoreload': {
            'handlers': ['null'],
            'propagate': False,
        },

        '': {
            'level': 'DEBUG',
            'handlers': ['console', 'mail_admins', 'mongolog'],
            'propagate': False,
        }
    }
}

ELASTIC_SEARCH = Elasticsearch([{'host': 'elasticsearch', 'port': 9200}])
